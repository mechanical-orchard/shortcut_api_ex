name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.16.2"
          otp-version: "26.2.5"

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get
      - name: Static analysis
        run: mix credo --strict
      - name: Run tests
        run: mix test
      - name: Check formatting
        run: mix format --check-formatted

      - name: Calculate semantic version
        id: versioning
        uses: bitshifted/git-auto-semver@v1.1.0
        with:
          main_branch: main
          create_tag: false
          tag_prefix: 'v'

      - name: Update version in mix.exs
        env:
          RELEASE_VERSION: ${{ steps.versioning.outputs.version-string }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sed -i "s/version: \".*\"/version: \"${RELEASE_VERSION#v}\"/" mix.exs
          git add mix.exs
          git commit -m "chore: Bump version to ${RELEASE_VERSION}"
          git push

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.versioning.outputs.version-string }}
          git tag $VERSION
          git push origin $VERSION
          gh release create $VERSION \
            --title "Release $VERSION" \
            --generate-notes

  publish:
    name: Publish to Hex.pm
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main  # Get the latest commit with version update
          
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16.2'
          otp-version: '26.2.5'
      
      - name: Install dependencies
        run: mix deps.get
      
      - name: Publish to Hex.pm
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: mix hex.publish --yes
